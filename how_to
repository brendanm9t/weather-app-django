mkdir /udemy/django/weather

python -m venv venv

source venv/bin/activate # Use < conda deactivate > to deactivate

django-admin.py startproject weather

cd weather/

python manage.py migrate

python manage.py runserver

localhost:8000 # Run in web browser

python manage.py createsuperuser # Once per project

python manage.py startapp lookup
(add lookup app to the setup files. Main program - settings.py)

add urls.py to lookup app

include path for lookup.urls to main url.py

add templates folder under lookup app

add home.html to templates folder # This will become your home page

define a view for home.html in view.py under the lookup app

add base.html to templates under lookup # base.html will be used mainly

link home.html with base.html

add about.html to templates under lookup # Can remove .html from url.py

create a view for about

add bootsrap starter template content to base.html & add div class="container" for block content
<br/>
    <div class="container">
      {%block content%}

      {%endblock%}
  </div>

to the <body> of base.html, add the navbar code from

Change submit button type & navbar colour

Hide Disabled tab from navbar

Hide the dropdown menu from the navbar

Change Navbar to Weather Application

Change the reference point when you click Weather Application
<a class="navbar-brand" href="/">Wea...

Change the Link to About Me & update reference to page
<a class="nav-link" href="/about.html">Ab...

Change about link using Django links
From: <a class="nav-link" href="/about.html">About Us</a>
To: <a class="nav-link" href="{% url 'about' %}">About Us</a>

Change Home link using Django links
From: <a class="navbar-brand" href="/">Weather Application</a>
To: <a class="navbar-brand" href="{% url 'home' %}">Weather Application</a>

Version control using github:
git add .
git commit -am 'Description for commit'
git push

Update the homepage view:
import json, resuests
add url from api to api_requests
add Python error handling routine to home view
Add api variable (API content) to request render
Add call to api variable in home.html
Refine display to home
Refine homepage error handling
Update home view with <div class="jumbotron">
  <h1 class="display-4">Hello, world!</h1>
  <p class="lead">This is a simple hero unit, a simple jumbotron-style component for calling extra attention to featured content or information.</p>
  <hr class="my-4">
  <p>It uses utility classes for typography and spacing to space content out within the larger container.</p>
  <a class="btn btn-primary btn-lg" href="#" role="button">Learn more</a>
</div>
Add previously refined outputs to jumbotron routine
Add Index indicator description
Add basic css for colour:
<style>
  .good {background-color: #00e400;}
  .moderate {background-color: #ffff00;}
  .UnhealthySensitiveGroups {background-color: #ff7e00;}
  .unhealthy {background-color: #ff0000;}
  .veryunhealthy {background-color: #8f3f97;}
  .hazardous {background-color: #7e0023;}
</style>
Update home render in views.py with:
{% if api.0.Category.Number == 1 %}
   <p>(0 - 50): Air quality is satisfactory, and air pollution poses little or no risk. <br/></p>
 {% elif api.0.Category.Number == 2 %}
   <p>(51 to 100): Air quality is acceptable. However, there may be a risk for some people, particularly those who are unusually sensitive to air pollution. <br/></p>
 {% elif api.0.Category.Number == 3 %}
   <p>(101 to 150): Members of sensitive groups may experience health effects. The general public is less likely to be affected. <br/></p>
 {% elif api.0.Category.Number == 4 %}
   <p>(151 to 200): Some members of the general public may experience health effects; members of sensitive groups may experience more serious health effects. <br/></p>
 {% elif api.0.Category.Number == 5 %}
   <p>(201 to 300): Health alert: The risk of health effects is increased for everyone. <br/></p>
 {% elif api.0.Category.Number == 6 %}
   <p>(301 and higher): Health warning of emergency conditions: everyone is more likely to be affected. <br/></p>
 {% endif %}
Remove django code & convert to Python
Remove Python coding from home.html
Add category_description to context variables in views.py
Add category_colour to context variables in views.py
Update placeholder & display of the Search bar in base.html
Add csrf token to the form
Create django link to point home from the form in base.html
Add an action & a method to the form
Add name="zipcode" to input to the form
Split home view into get & POST

# Changes from here
